{"version":3,"file":"number-property.js","sourceRoot":"","sources":["../../../../../src/lib/core/coercion/number-property.ts"],"names":[],"mappings":"AAAA,mEAAmE;AACnE,qCAAqC,KAAU,EAAE,aAAiB;IAAjB,6BAAiB,GAAjB,iBAAiB;IAChE,iGAAiG;IACjG,4FAA4F;IAC5F,oFAAoF;IACpF,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,KAAY,CAAC,CAAC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;AACjG,CAAC","sourcesContent":["/** Coerces a data-bound value (typically a string) to a number. */\nexport function coerceNumberProperty(value: any, fallbackValue = 0) {\n  // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n  // and other non-number values as NaN, where Number just uses 0) but it considers the string\n  // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n  return isNaN(parseFloat(value as any)) || isNaN(Number(value)) ? fallbackValue : Number(value);\n}\n"]}