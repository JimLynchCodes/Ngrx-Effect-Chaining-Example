{"version":3,"file":"portal-directives.js","sourceRoot":"","sources":["../../../../../src/lib/core/portal/portal-directives.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    NgModule,\n    ModuleWithProviders,\n    ComponentRef,\n    Directive,\n    TemplateRef,\n    ComponentFactoryResolver,\n    ViewContainerRef,\n    OnDestroy,\n    Input,\n} from '@angular/core';\nimport {Portal, TemplatePortal, ComponentPortal, BasePortalHost} from './portal';\n\n\n/**\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\n *\n * Usage:\n * <template portal #greeting>\n *   <p> Hello {{name}} </p>\n * </template>\n */\n@Directive({\n  selector: '[cdk-portal], [portal]',\n  exportAs: 'cdkPortal',\n})\nexport class TemplatePortalDirective extends TemplatePortal {\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\n    super(templateRef, viewContainerRef);\n  }\n}\n\n\n/**\n * Directive version of a PortalHost. Because the directive *is* a PortalHost, portals can be\n * directly attached to it, enabling declarative use.\n *\n * Usage:\n * <template [cdkPortalHost]=\"greeting\"></template>\n */\n@Directive({\n  selector: '[cdkPortalHost], [portalHost]',\n  inputs: ['portal: cdkPortalHost']\n})\nexport class PortalHostDirective extends BasePortalHost implements OnDestroy {\n  /** The attached portal. */\n  private _portal: Portal<any>;\n\n  constructor(\n      private _componentFactoryResolver: ComponentFactoryResolver,\n      private _viewContainerRef: ViewContainerRef) {\n    super();\n  }\n\n  /** @deprecated */\n  @Input('portalHost')\n  get _deprecatedPortal() { return this.portal; }\n  set _deprecatedPortal(v) { this.portal = v; }\n\n  /** Portal associated with the Portal host. */\n  get portal(): Portal<any> {\n    return this._portal;\n  }\n\n  set portal(p: Portal<any>) {\n    if (p) {\n      this._replaceAttachedPortal(p);\n    }\n  }\n\n  ngOnDestroy() {\n    this.dispose();\n  }\n\n  /**\n   * Attach the given ComponentPortal to this PortalHost using the ComponentFactoryResolver.\n   *\n   * @param portal Portal to be attached to the portal host.\n   */\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    portal.setAttachedHost(this);\n\n    // If the portal specifies an origin, use that as the logical location of the component\n    // in the application tree. Otherwise use the location of this PortalHost.\n    let viewContainerRef = portal.viewContainerRef != null ?\n        portal.viewContainerRef :\n        this._viewContainerRef;\n\n    let componentFactory =\n        this._componentFactoryResolver.resolveComponentFactory(portal.component);\n    let ref = viewContainerRef.createComponent(\n        componentFactory, viewContainerRef.length,\n        portal.injector || viewContainerRef.parentInjector);\n\n    this.setDisposeFn(() => ref.destroy());\n    return ref;\n  }\n\n  /**\n   * Attach the given TemplatePortal to this PortlHost as an embedded View.\n   * @param portal Portal to be attached.\n   */\n  attachTemplatePortal(portal: TemplatePortal): Map<string, any> {\n    portal.setAttachedHost(this);\n\n    this._viewContainerRef.createEmbeddedView(portal.templateRef);\n    this.setDisposeFn(() => this._viewContainerRef.clear());\n\n    // TODO(jelbourn): return locals from view\n    return new Map<string, any>();\n  }\n\n  /** Detaches the currently attached Portal (if there is one) and attaches the given Portal. */\n  private _replaceAttachedPortal(p: Portal<any>): void {\n    if (this.hasAttached()) {\n      this.detach();\n    }\n\n    if (p) {\n      this.attach(p);\n      this._portal = p;\n    }\n  }\n}\n\n\n@NgModule({\n  exports: [TemplatePortalDirective, PortalHostDirective],\n  declarations: [TemplatePortalDirective, PortalHostDirective],\n})\nexport class PortalModule {\n  /** @deprecated */\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: PortalModule,\n      providers: []\n    };\n  }\n}\n"]}