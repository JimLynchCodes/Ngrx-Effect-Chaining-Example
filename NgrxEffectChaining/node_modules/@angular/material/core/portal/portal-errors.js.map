{"version":3,"file":"portal-errors.js","sourceRoot":"","sources":["../../../../../src/lib/core/portal/portal-errors.ts"],"names":[],"mappings":";;;;;OAAO,EAAC,OAAO,EAAC,MAAM,iBAAiB;AAEvC;;;GAGG;AACH;IAAqC,mCAAO;IAC1C;QACI,kBAAM,iCAAiC,CAAC,CAAC;IAC7C,CAAC;IACH,sBAAC;AAAD,CAAC,AAJD,CAAqC,OAAO,GAI3C;AAED;;;GAGG;AACH;IAAgD,8CAAO;IACrD;QACI,kBAAM,oCAAoC,CAAC,CAAC;IAChD,CAAC;IACH,iCAAC;AAAD,CAAC,AAJD,CAAgD,OAAO,GAItD;AAED;;;GAGG;AACH;IAAoD,kDAAO;IACzD;QACI,kBAAM,2CAA2C,CAAC,CAAC;IACvD,CAAC;IACH,qCAAC;AAAD,CAAC,AAJD,CAAoD,OAAO,GAI1D;AAED;;;GAGG;AACH;IAA4C,0CAAO;IACjD;QACI,kBACE,+CAA+C;YAC/C,sEAAsE,CAAC,CAAC;IAC9E,CAAC;IACH,6BAAC;AAAD,CAAC,AAND,CAA4C,OAAO,GAMlD;AAED;;;GAGG;AACH;IAAyC,uCAAO;IAC9C;QACI,kBAAM,oDAAoD,CAAC,CAAC;IAChE,CAAC;IACH,0BAAC;AAAD,CAAC,AAJD,CAAyC,OAAO,GAI/C;AAED;;;GAGG;AACH;IAA2C,yCAAO;IAChD;QACI,kBAAM,8DAA8D,CAAC,CAAC;IAC1E,CAAC;IACH,4BAAC;AAAD,CAAC,AAJD,CAA2C,OAAO,GAIjD","sourcesContent":["import {MdError} from '../errors/error';\n\n/**\n * Exception thrown when attempting to attach a null portal to a host.\n * @docs-private\n */\nexport class NullPortalError extends MdError {\n  constructor() {\n      super('Must provide a portal to attach');\n  }\n}\n\n/**\n * Exception thrown when attempting to attach a portal to a host that is already attached.\n * @docs-private\n */\nexport class PortalAlreadyAttachedError extends MdError {\n  constructor() {\n      super('Host already has a portal attached');\n  }\n}\n\n/**\n * Exception thrown when attempting to attach a portal to an already-disposed host.\n * @docs-private\n */\nexport class PortalHostAlreadyDisposedError extends MdError {\n  constructor() {\n      super('This PortalHost has already been disposed');\n  }\n}\n\n/**\n * Exception thrown when attempting to attach an unknown portal type.\n * @docs-private\n */\nexport class UnknownPortalTypeError extends MdError {\n  constructor() {\n      super(\n        'Attempting to attach an unknown Portal type. ' +\n        'BasePortalHost accepts either a ComponentPortal or a TemplatePortal.');\n  }\n}\n\n/**\n * Exception thrown when attempting to attach a portal to a null host.\n * @docs-private\n */\nexport class NullPortalHostError extends MdError {\n  constructor() {\n      super('Attempting to attach a portal to a null PortalHost');\n  }\n}\n\n/**\n * Exception thrown when attempting to detach a portal that is not attached.\n * @docs-private\n */\nexport class NoPortalAttachedError extends MdError {\n  constructor() {\n      super('Attempting to detach a portal that is not attached to a host');\n  }\n}\n"]}