{"version":3,"file":"compatibility.js","sourceRoot":"","sources":["../../../../../src/lib/core/compatibility/compatibility.ts"],"names":[],"mappings":";;;;;;;;;;;;OAAO,EACL,QAAQ,EAER,SAAS,EACT,WAAW,EACX,MAAM,EACN,QAAQ,EACT,MAAM,eAAe;AAGtB,OAAO,IAAM,2BAA2B,GAAG,IAAI,WAAW,CAAC,uBAAuB,CAAC,CAAC;AAEpF,iGAAiG;AACjG,OAAO,IAAM,qBAAqB,GAAG,qpCA4DvB,CAAC;AAEf,iGAAiG;AACjG,OAAO,IAAM,oBAAoB,GAAG,2lCA4DvB,CAAC;AAEd,qEAAqE;AAErE;IACE,2BAA6D,mBAA4B;QACvF,EAAE,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACzB,MAAM,KAAK,CAAC,4EAA4E,CAAC,CAAC;QAC5F,CAAC;IACH,CAAC;IANH;QAAC,SAAS,CAAC,EAAC,QAAQ,EAAE,qBAAqB,EAAC,CAAC;mBAE9B,QAAQ,EAAE;mBAAE,MAAM,CAAC,2BAA2B,CAAC;;yBAFjB;IAO7C,wBAAC;AAAD,CAAC,AAND,IAMC;AAED,oEAAoE;AAEpE;IACE,0BAA6D,mBAA4B;QACvF,EAAE,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACxB,MAAM,KAAK,CAAC,uEAAuE,CAAC,CAAC;QACvF,CAAC;IACH,CAAC;IANH;QAAC,SAAS,CAAC,EAAC,QAAQ,EAAE,oBAAoB,EAAC,CAAC;mBAE7B,QAAQ,EAAE;mBAAE,MAAM,CAAC,2BAA2B,CAAC;;wBAFlB;IAO5C,uBAAC;AAAD,CAAC,AAND,IAMC;AAGD;;;;GAIG;AAKH;IAAA;IAOA,CAAC;IANQ,2BAAO,GAAd;QACE,MAAM,CAAC;YACL,QAAQ,EAAE,mBAAmB;YAC7B,SAAS,EAAE,EAAE;SACd,CAAC;IACJ,CAAC;IAVH;QAAC,QAAQ,CAAC;YACR,YAAY,EAAE,CAAC,iBAAiB,EAAE,gBAAgB,CAAC;YACnD,OAAO,EAAE,CAAC,iBAAiB,EAAE,gBAAgB,CAAC;SAC/C,CAAC;;2BAAA;IAQF,0BAAC;AAAD,CAAC,AAPD,IAOC;AAGD;;;GAGG;AAMH;IAAA;IAA+C,CAAC;IALhD;QAAC,QAAQ,CAAC;YACR,SAAS,EAAE,CAAC;oBACV,OAAO,EAAE,2BAA2B,EAAE,QAAQ,EAAE,IAAI;iBACrD,CAAC;SACH,CAAC;;wCAAA;IAC6C,uCAAC;AAAD,CAAC,AAAhD,IAAgD","sourcesContent":["import {\n  NgModule,\n  ModuleWithProviders,\n  Directive,\n  OpaqueToken,\n  Inject,\n  Optional,\n} from '@angular/core';\n\n\nexport const MATERIAL_COMPATIBILITY_MODE = new OpaqueToken('md-compatibility-mode');\n\n/** Selector that matches all elements that may have style collisions with AngularJS Material. */\nexport const MAT_ELEMENTS_SELECTOR = `\n  [mat-button],\n  [mat-dialog-actions],\n  [mat-dialog-close],\n  [mat-dialog-content],\n  [mat-dialog-title],\n  [mat-fab],\n  [mat-icon-button],\n  [mat-menu-trigger-for],\n  [mat-mini-fab],\n  [mat-raised-button],\n  [mat-tab-label],\n  [mat-tab-link],\n  [mat-tab-nav-bar],\n  [matTooltip],\n  mat-autocomplete,\n  mat-button-toggle,\n  mat-button-toggle-group,\n  mat-button-toggle,\n  mat-card,\n  mat-card-actions,\n  mat-card-content,\n  mat-card-footer,\n  mat-card-header,\n  mat-card-subtitle,\n  mat-card-title,\n  mat-card-title-group,\n  mat-checkbox,\n  mat-chip,\n  mat-dialog-actions,\n  mat-dialog-container,\n  mat-dialog-content,\n  mat-divider,\n  mat-grid-list,\n  mat-grid-tile,\n  mat-grid-tile-footer,\n  mat-grid-tile-header,\n  mat-hint,\n  mat-icon,\n  mat-ink-bar,\n  mat-list,\n  mat-list-item,\n  mat-menu,\n  mat-nav-list,\n  mat-option,\n  mat-placeholder,\n  mat-progress-bar,\n  mat-progress-circle,\n  mat-pseudo-checkbox,\n  mat-radio-button,\n  mat-radio-group,\n  mat-select,\n  mat-sidenav,\n  mat-sidenav-container,\n  mat-slider,\n  mat-spinner,\n  mat-tab,\n  mat-tab-body,\n  mat-tab-header,\n  mat-tab-group,\n  mat-toolbar`;\n\n/** Selector that matches all elements that may have style collisions with AngularJS Material. */\nexport const MD_ELEMENTS_SELECTOR = `  \n  [md-button],\n  [md-dialog-actions],\n  [md-dialog-close],\n  [md-dialog-content],\n  [md-dialog-title],\n  [md-fab],\n  [md-icon-button],\n  [md-menu-trigger-for],\n  [md-mini-fab],\n  [md-raised-button],\n  [md-tab-label],\n  [md-tab-link],\n  [md-tab-nav-bar],\n  [mdTooltip],\n  md-autocomplete,\n  md-button-toggle,\n  md-button-toggle-group,\n  md-button-toggle,\n  md-card,\n  md-card-actions,\n  md-card-content,\n  md-card-footer,\n  md-card-header,\n  md-card-subtitle,\n  md-card-title,\n  md-card-title-group,\n  md-checkbox,\n  md-chip,\n  md-dialog-actions,\n  md-dialog-container,\n  md-dialog-content,\n  md-divider,\n  md-grid-list,\n  md-grid-tile,\n  md-grid-tile-footer,\n  md-grid-tile-header,\n  md-hint,\n  md-icon,\n  md-ink-bar,\n  md-list,\n  md-list-item,\n  md-menu,\n  md-nav-list,\n  md-option,\n  md-placeholder,\n  md-progress-bar,\n  md-progress-circle,\n  md-pseudo-checkbox,\n  md-radio-button,\n  md-radio-group,\n  md-select,\n  md-sidenav,\n  md-sidenav-container,\n  md-slider,\n  md-spinner,\n  md-tab,\n  md-tab-body,\n  md-tab-header,\n  md-tab-group,\n  md-toolbar`;\n\n/** Directive that enforces that the `mat-` prefix cannot be used. */\n@Directive({selector: MAT_ELEMENTS_SELECTOR})\nexport class MatPrefixRejector {\n  constructor(@Optional() @Inject(MATERIAL_COMPATIBILITY_MODE) isCompatibilityMode: boolean) {\n    if (!isCompatibilityMode) {\n      throw Error('The \"mat-\" prefix cannot be used out of ng-material v1 compatibility mode.');\n    }\n  }\n}\n\n/** Directive that enforces that the `md-` prefix cannot be used. */\n@Directive({selector: MD_ELEMENTS_SELECTOR})\nexport class MdPrefixRejector {\n  constructor(@Optional() @Inject(MATERIAL_COMPATIBILITY_MODE) isCompatibilityMode: boolean) {\n    if (isCompatibilityMode) {\n      throw Error('The \"md-\" prefix cannot be used in ng-material v1 compatibility mode.');\n    }\n  }\n}\n\n\n/**\n * Module that enforces the default compatibility mode settings. When this module is loaded\n * without NoConflictStyleCompatibilityMode also being imported, it will throw an error if\n * there are any uses of the `mat-` prefix.\n */\n@NgModule({\n  declarations: [MatPrefixRejector, MdPrefixRejector],\n  exports: [MatPrefixRejector, MdPrefixRejector],\n})\nexport class CompatibilityModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: CompatibilityModule,\n      providers: [],\n    };\n  }\n}\n\n\n/**\n * Module that enforces \"no-conflict\" compatibility mode settings. When this module is loaded,\n * it will throw an error if there are any uses of the `md-` prefix.\n */\n@NgModule({\n  providers: [{\n    provide: MATERIAL_COMPATIBILITY_MODE, useValue: true,\n  }],\n})\nexport class NoConflictStyleCompatibilityMode {}\n"]}