{"version":3,"file":"overlay-position-builder.js","sourceRoot":"","sources":["../../../../../../src/lib/core/overlay/position/overlay-position-builder.ts"],"names":[],"mappings":";;;;;;;;;OAAO,EAAC,aAAa,EAAC,MAAM,kBAAkB;OACvC,EAAC,yBAAyB,EAAC,MAAM,+BAA+B;OAChE,EAAa,UAAU,EAAC,MAAM,eAAe;OAC7C,EAAC,sBAAsB,EAAC,MAAM,4BAA4B;AAKjE,6CAA6C;AAE7C;IACE,gCAAoB,cAA6B;QAA7B,mBAAc,GAAd,cAAc,CAAe;IAAI,CAAC;IAEtD;;OAEG;IACH,uCAAM,GAAN;QACE,MAAM,CAAC,IAAI,sBAAsB,EAAE,CAAC;IACtC,CAAC;IAED;;;;;OAKG;IACH,4CAAW,GAAX,UACI,UAAsB,EACtB,SAAmC,EACnC,UAAqC;QACvC,MAAM,CAAC,IAAI,yBAAyB,CAAC,UAAU,EAAE,SAAS,EAAE,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IAC/F,CAAC;IAtBH;QAAC,UAAU,EAAE;;8BAAA;IAuBb,6BAAC;AAAD,CAAC,AAtBD,IAsBC","sourcesContent":["import {ViewportRuler} from './viewport-ruler';\nimport {ConnectedPositionStrategy} from './connected-position-strategy';\nimport {ElementRef, Injectable} from '@angular/core';\nimport {GlobalPositionStrategy} from './global-position-strategy';\nimport {OverlayConnectionPosition, OriginConnectionPosition} from './connected-position';\n\n\n\n/** Builder for overlay position strategy. */\n@Injectable()\nexport class OverlayPositionBuilder {\n  constructor(private _viewportRuler: ViewportRuler) { }\n\n  /**\n   * Creates a global position strategy.\n   */\n  global(): GlobalPositionStrategy {\n    return new GlobalPositionStrategy();\n  }\n\n  /**\n   * Creates a relative position strategy.\n   * @param elementRef\n   * @param originPos\n   * @param overlayPos\n   */\n  connectedTo(\n      elementRef: ElementRef,\n      originPos: OriginConnectionPosition,\n      overlayPos: OverlayConnectionPosition): ConnectedPositionStrategy {\n    return new ConnectedPositionStrategy(elementRef, originPos, overlayPos, this._viewportRuler);\n  }\n}\n"]}