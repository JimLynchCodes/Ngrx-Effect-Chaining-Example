{"version":3,"file":"list.js","sourceRoot":"","sources":["../../../../src/lib/list/list.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n    Component,\n    ViewEncapsulation,\n    ContentChildren,\n    ContentChild,\n    QueryList,\n    Directive,\n    ElementRef,\n    Renderer,\n    AfterContentInit,\n    NgModule,\n    ModuleWithProviders,\n} from '@angular/core';\nimport {MdLine, MdLineSetter, MdLineModule, CompatibilityModule} from '../core';\n\n@Directive({\n  selector: 'md-divider, mat-divider'\n})\nexport class MdListDivider {}\n\n@Component({\n  moduleId: module.id,\n  selector: 'md-list, mat-list, md-nav-list, mat-nav-list',\n  host: {\n    'role': 'list'},\n  template: '<ng-content></ng-content>',\n  styleUrls: ['list.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MdList {}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n */\n@Directive({\n  selector: 'md-list, mat-list',\n  host: {\n    '[class.mat-list]': 'true'\n  }\n})\nexport class MdListCssMatStyler {}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n */\n@Directive({\n  selector: 'md-nav-list, mat-nav-list',\n  host: {\n    '[class.mat-nav-list]': 'true'\n  }\n})\nexport class MdNavListCssMatStyler {}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n */\n@Directive({\n  selector: 'md-divider, mat-divider',\n  host: {\n    '[class.mat-divider]': 'true'\n  }\n})\nexport class MdDividerCssMatStyler {}\n\n/* Need directive for a ContentChild query in list-item */\n@Directive({\n  selector: '[md-list-avatar], [mat-list-avatar]',\n  host: {\n    '[class.mat-list-avatar]': 'true'\n  }\n})\nexport class MdListAvatarCssMatStyler {}\n\n/* Need directive to add mat- CSS styling */\n@Directive({\n  selector: '[md-list-icon], [mat-list-icon]',\n  host: {\n    '[class.mat-list-icon]': 'true'\n  }\n})\nexport class MdListIconCssMatStyler {}\n\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n */\n@Directive({\n  selector: '[md-subheader], [mat-subheader]',\n  host: {\n    '[class.mat-subheader]': 'true'\n  }\n})\nexport class MdListSubheaderCssMatStyler {}\n\n@Component({\n  moduleId: module.id,\n  selector: 'md-list-item, mat-list-item, a[md-list-item], a[mat-list-item]',\n  host: {\n    'role': 'listitem',\n    '(focus)': '_handleFocus()',\n    '(blur)': '_handleBlur()',\n    '[class.mat-list-item]': 'true',\n  },\n  templateUrl: 'list-item.html',\n  encapsulation: ViewEncapsulation.None\n})\nexport class MdListItem implements AfterContentInit {\n  _hasFocus: boolean = false;\n\n  private _lineSetter: MdLineSetter;\n\n  @ContentChildren(MdLine) _lines: QueryList<MdLine>;\n\n  @ContentChild(MdListAvatarCssMatStyler)\n  set _hasAvatar(avatar: MdListAvatarCssMatStyler) {\n    this._renderer.setElementClass(\n        this._element.nativeElement, 'mat-list-item-avatar', avatar != null);\n  }\n\n  constructor(private _renderer: Renderer, private _element: ElementRef) {}\n\n  ngAfterContentInit() {\n    this._lineSetter = new MdLineSetter(this._lines, this._renderer, this._element);\n  }\n\n  _handleFocus() {\n    this._hasFocus = true;\n  }\n\n  _handleBlur() {\n    this._hasFocus = false;\n  }\n}\n\n\n@NgModule({\n  imports: [MdLineModule, CompatibilityModule],\n  exports: [\n    MdList,\n    MdListItem,\n    MdListDivider,\n    MdListAvatarCssMatStyler,\n    MdLineModule,\n    CompatibilityModule,\n    MdListIconCssMatStyler,\n    MdListCssMatStyler,\n    MdNavListCssMatStyler,\n    MdDividerCssMatStyler,\n    MdListSubheaderCssMatStyler\n  ],\n  declarations: [\n    MdList,\n    MdListItem,\n    MdListDivider,\n    MdListAvatarCssMatStyler,\n    MdListIconCssMatStyler,\n    MdListCssMatStyler,\n    MdNavListCssMatStyler,\n    MdDividerCssMatStyler,\n    MdListSubheaderCssMatStyler\n  ],\n})\nexport class MdListModule {\n  /** @deprecated */\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MdListModule,\n      providers: []\n    };\n  }\n}\n"]}