{"version":3,"file":"tooltip.js","sourceRoot":"","sources":["../../../../src/lib/tooltip/tooltip.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  NgModule,\n  ModuleWithProviders,\n  Component,\n  Directive,\n  Input,\n  ElementRef,\n  ViewContainerRef,\n  style,\n  trigger,\n  state,\n  transition,\n  animate,\n  AnimationTransitionEvent,\n  NgZone,\n  Optional,\n  OnDestroy,\n  OnInit,\n  ChangeDetectorRef\n} from '@angular/core';\nimport {\n  Overlay,\n  OverlayState,\n  OverlayModule,\n  OverlayRef,\n  ComponentPortal,\n  OverlayConnectionPosition,\n  OriginConnectionPosition,\n  CompatibilityModule\n} from '../core';\nimport {MdTooltipInvalidPositionError} from './tooltip-errors';\nimport {Observable} from 'rxjs/Observable';\nimport {Subject} from 'rxjs/Subject';\nimport {Dir} from '../core/rtl/dir';\nimport 'rxjs/add/operator/first';\nimport {ScrollDispatcher} from '../core/overlay/scroll/scroll-dispatcher';\nimport {Subscription} from 'rxjs/Subscription';\n\nexport type TooltipPosition = 'left' | 'right' | 'above' | 'below' | 'before' | 'after';\n\n/** Time in ms to delay before changing the tooltip visibility to hidden */\nexport const TOUCHEND_HIDE_DELAY  = 1500;\n\n/** Time in ms to throttle repositioning after scroll events. */\nexport const SCROLL_THROTTLE_MS = 20;\n\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.google.com/components/tooltips.html\n */\n@Directive({\n  selector: '[md-tooltip], [mdTooltip], [mat-tooltip], [matTooltip]',\n  host: {\n    '(longpress)': 'show()',\n    '(touchend)': 'hide(' + TOUCHEND_HIDE_DELAY + ')',\n    '(mouseenter)': 'show()',\n    '(mouseleave)': 'hide()',\n  },\n  exportAs: 'mdTooltip',\n})\nexport class MdTooltip implements OnInit, OnDestroy {\n  _overlayRef: OverlayRef;\n  _tooltipInstance: TooltipComponent;\n  scrollSubscription: Subscription;\n\n  private _position: TooltipPosition = 'below';\n\n  /** Allows the user to define the position of the tooltip relative to the parent element */\n  @Input('mdTooltipPosition')\n  get position(): TooltipPosition { return this._position; }\n  set position(value: TooltipPosition) {\n    if (value !== this._position) {\n      this._position = value;\n\n      // TODO(andrewjs): When the overlay's position can be dynamically changed, do not destroy\n      // the tooltip.\n      if (this._tooltipInstance) {\n        this._disposeTooltip();\n      }\n    }\n  }\n\n  /** @deprecated */\n  @Input('tooltip-position')\n  get _positionDeprecated(): TooltipPosition { return this._position; }\n  set _positionDeprecated(value: TooltipPosition) { this._position = value; }\n\n  /** The default delay in ms before showing the tooltip after show is called */\n  @Input('mdTooltipShowDelay') showDelay = 0;\n\n  /** The default delay in ms before hiding the tooltip after hide is called */\n  @Input('mdTooltipHideDelay') hideDelay = 0;\n\n  private _message: string;\n\n  /** The message to be displayed in the tooltip */\n  @Input('mdTooltip') get message() { return this._message; }\n  set message(value: string) {\n    this._message = value;\n    if (this._tooltipInstance) {\n      this._setTooltipMessage(this._message);\n    }\n  }\n\n  /** @deprecated */\n  @Input('md-tooltip')\n  get _deprecatedMessage(): string { return this.message; }\n  set _deprecatedMessage(v: string) { this.message = v; }\n\n  // Properties with `mat-` prefix for noconflict mode.\n  @Input('matTooltip')\n  get _matMessage() { return this.message; }\n  set _matMessage(v) { this.message = v; }\n\n  // Properties with `mat-` prefix for noconflict mode.\n  @Input('matTooltipPosition')\n  get _matPosition() { return this.position; }\n  set _matPosition(v) { this.position = v; }\n\n  // Properties with `mat-` prefix for noconflict mode.\n  @Input('matTooltipHideDelay')\n  get _matHideDelay() { return this.hideDelay; }\n  set _matHideDelay(v) { this.hideDelay = v; }\n\n  // Properties with `mat-` prefix for noconflict mode.\n  @Input('matTooltipShowDelay')\n  get _matShowDelay() { return this.showDelay; }\n  set _matShowDelay(v) { this.showDelay = v; }\n\n  constructor(private _overlay: Overlay,\n              private _scrollDispatcher: ScrollDispatcher,\n              private _elementRef: ElementRef,\n              private _viewContainerRef: ViewContainerRef,\n              private _ngZone: NgZone,\n              @Optional() private _dir: Dir) { }\n\n  ngOnInit() {\n    // When a scroll on the page occurs, update the position in case this tooltip needs\n    // to be repositioned.\n    this.scrollSubscription = this._scrollDispatcher.scrolled(SCROLL_THROTTLE_MS).subscribe(() => {\n      if (this._overlayRef) {\n        this._overlayRef.updatePosition();\n      }\n    });\n  }\n\n  /**\n   * Dispose the tooltip when destroyed.\n   */\n  ngOnDestroy() {\n    if (this._tooltipInstance) {\n      this._disposeTooltip();\n    }\n\n    this.scrollSubscription.unsubscribe();\n  }\n\n  /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n  show(delay: number = this.showDelay): void {\n    if (!this._message || !this._message.trim()) { return; }\n\n    if (!this._tooltipInstance) {\n      this._createTooltip();\n    }\n\n    this._setTooltipMessage(this._message);\n    this._tooltipInstance.show(this._position, delay);\n  }\n\n  /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n  hide(delay: number = this.hideDelay): void {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.hide(delay);\n    }\n  }\n\n  /** Shows/hides the tooltip */\n  toggle(): void {\n    this._isTooltipVisible() ? this.hide() : this.show();\n  }\n\n  /** Returns true if the tooltip is currently visible to the user */\n  _isTooltipVisible(): boolean {\n    return this._tooltipInstance && this._tooltipInstance.isVisible();\n  }\n\n  /** Create the tooltip to display */\n  private _createTooltip(): void {\n    this._createOverlay();\n    let portal = new ComponentPortal(TooltipComponent, this._viewContainerRef);\n    this._tooltipInstance = this._overlayRef.attach(portal).instance;\n\n    // Dispose the overlay when finished the shown tooltip.\n    this._tooltipInstance.afterHidden().subscribe(() => {\n      // Check first if the tooltip has already been removed through this components destroy.\n      if (this._tooltipInstance) {\n        this._disposeTooltip();\n      }\n    });\n  }\n\n  /** Create the overlay config and position strategy */\n  private _createOverlay(): void {\n    let origin = this._getOrigin();\n    let position = this._getOverlayPosition();\n\n    // Create connected position strategy that listens for scroll events to reposition.\n    // After position changes occur and the overlay is clipped by a parent scrollable then\n    // close the tooltip.\n    let strategy = this._overlay.position().connectedTo(this._elementRef, origin, position);\n    strategy.withScrollableContainers(this._scrollDispatcher.getScrollContainers(this._elementRef));\n    strategy.onPositionChange.subscribe(change => {\n      if (change.scrollableViewProperties.isOverlayClipped &&\n          this._tooltipInstance && this._tooltipInstance.isVisible()) {\n        this.hide(0);\n      }\n    });\n    let config = new OverlayState();\n    config.positionStrategy = strategy;\n\n    this._overlayRef = this._overlay.create(config);\n  }\n\n  /** Disposes the current tooltip and the overlay it is attached to */\n  private _disposeTooltip(): void {\n    this._overlayRef.dispose();\n    this._overlayRef = null;\n    this._tooltipInstance = null;\n  }\n\n  /** Returns the origin position based on the user's position preference */\n  _getOrigin(): OriginConnectionPosition {\n    if (this.position == 'above' || this.position == 'below') {\n      return {originX: 'center', originY: this.position == 'above' ? 'top' : 'bottom'};\n    }\n\n    const isDirectionLtr = !this._dir || this._dir.value == 'ltr';\n    if (this.position == 'left' ||\n        this.position == 'before' && isDirectionLtr ||\n        this.position == 'after' && !isDirectionLtr) {\n      return {originX: 'start', originY: 'center'};\n    }\n\n    if (this.position == 'right' ||\n        this.position == 'after' && isDirectionLtr ||\n        this.position == 'before' && !isDirectionLtr) {\n      return {originX: 'end', originY: 'center'};\n    }\n\n    throw new MdTooltipInvalidPositionError(this.position);\n  }\n\n  /** Returns the overlay position based on the user's preference */\n  _getOverlayPosition(): OverlayConnectionPosition {\n    if (this.position == 'above') {\n      return {overlayX: 'center', overlayY: 'bottom'};\n    }\n\n    if (this.position == 'below') {\n      return {overlayX: 'center', overlayY: 'top'};\n    }\n\n    const isLtr = !this._dir || this._dir.value == 'ltr';\n    if (this.position == 'left' ||\n        this.position == 'before' && isLtr ||\n        this.position == 'after' && !isLtr) {\n      return {overlayX: 'end', overlayY: 'center'};\n    }\n\n    if (this.position == 'right' ||\n        this.position == 'after' && isLtr ||\n        this.position == 'before' && !isLtr) {\n      return {overlayX: 'start', overlayY: 'center'};\n    }\n\n    throw new MdTooltipInvalidPositionError(this.position);\n  }\n\n  /** Updates the tooltip message and repositions the overlay according to the new message length */\n  private _setTooltipMessage(message: string) {\n    // Must wait for the message to be painted to the tooltip so that the overlay can properly\n    // calculate the correct positioning based on the size of the text.\n    this._tooltipInstance.message = message;\n    this._ngZone.onMicrotaskEmpty.first().subscribe(() => {\n      if (this._tooltipInstance) {\n        this._overlayRef.updatePosition();\n      }\n    });\n  }\n}\n\nexport type TooltipVisibility = 'initial' | 'visible' | 'hidden';\n\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'md-tooltip-component, mat-tooltip-component',\n  templateUrl: 'tooltip.html',\n  styleUrls: ['tooltip.css'],\n  animations: [\n    trigger('state', [\n      state('void', style({transform: 'scale(0)'})),\n      state('initial', style({transform: 'scale(0)'})),\n      state('visible', style({transform: 'scale(1)'})),\n      state('hidden', style({transform: 'scale(0)'})),\n      transition('* => visible', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n      transition('* => hidden', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n    ])\n  ],\n  host: {\n    '(body:click)': 'this._handleBodyInteraction()'\n  }\n})\nexport class TooltipComponent {\n  /** Message to display in the tooltip */\n  message: string;\n\n  /** The timeout ID of any current timer set to show the tooltip */\n  _showTimeoutId: number;\n\n  /** The timeout ID of any current timer set to hide the tooltip */\n  _hideTimeoutId: number;\n\n  /** Property watched by the animation framework to show or hide the tooltip */\n  _visibility: TooltipVisibility = 'initial';\n\n  /** Whether interactions on the page should close the tooltip */\n  _closeOnInteraction: boolean = false;\n\n  /** The transform origin used in the animation for showing and hiding the tooltip */\n  _transformOrigin: string = 'bottom';\n\n  /** Subject for notifying that the tooltip has been hidden from the view */\n  private _onHide: Subject<any> = new Subject();\n\n  constructor(@Optional() private _dir: Dir, private _changeDetectorRef: ChangeDetectorRef) {}\n\n  /**\n   * Shows the tooltip with an animation originating from the provided origin\n   * @param position Position of the tooltip.\n   * @param delay Amount of milliseconds to the delay showing the tooltip.\n   */\n  show(position: TooltipPosition, delay: number): void {\n    // Cancel the delayed hide if it is scheduled\n    if (this._hideTimeoutId) {\n      clearTimeout(this._hideTimeoutId);\n    }\n\n    // Body interactions should cancel the tooltip if there is a delay in showing.\n    this._closeOnInteraction = true;\n\n    this._setTransformOrigin(position);\n    this._showTimeoutId = setTimeout(() => {\n      this._visibility = 'visible';\n\n      // If this was set to true immediately, then a body click that triggers show() would\n      // trigger interaction and close the tooltip right after it was displayed.\n      this._closeOnInteraction = false;\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._changeDetectorRef.markForCheck();\n      setTimeout(() => { this._closeOnInteraction = true; }, 0);\n    }, delay);\n  }\n\n  /**\n   * Begins the animation to hide the tooltip after the provided delay in ms.\n   * @param delay Amount of milliseconds to delay showing the tooltip.\n   */\n  hide(delay: number): void {\n    // Cancel the delayed show if it is scheduled\n    if (this._showTimeoutId) {\n      clearTimeout(this._showTimeoutId);\n    }\n\n    this._hideTimeoutId = setTimeout(() => {\n      this._visibility = 'hidden';\n      this._closeOnInteraction = false;\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._changeDetectorRef.markForCheck();\n    }, delay);\n  }\n\n  /**\n   * Returns an observable that notifies when the tooltip has been hidden from view\n   */\n  afterHidden(): Observable<void> {\n    return this._onHide.asObservable();\n  }\n\n  /**\n   * Whether the tooltip is being displayed\n   */\n  isVisible(): boolean {\n    return this._visibility === 'visible';\n  }\n\n  /** Sets the tooltip transform origin according to the tooltip position */\n  _setTransformOrigin(value: TooltipPosition) {\n    const isLtr = !this._dir || this._dir.value == 'ltr';\n    switch (value) {\n      case 'before': this._transformOrigin = isLtr ? 'right' : 'left'; break;\n      case 'after':  this._transformOrigin = isLtr ? 'left' : 'right'; break;\n      case 'left':   this._transformOrigin = 'right'; break;\n      case 'right':  this._transformOrigin = 'left'; break;\n      case 'above':    this._transformOrigin = 'bottom'; break;\n      case 'below': this._transformOrigin = 'top'; break;\n      default: throw new MdTooltipInvalidPositionError(value);\n    }\n  }\n\n  _afterVisibilityAnimation(e: AnimationTransitionEvent): void {\n    if (e.toState === 'hidden' && !this.isVisible()) {\n      this._onHide.next();\n    }\n  }\n\n  /**\n   * Interactions on the HTML body should close the tooltip immediately as defined in the\n   * material design spec.\n   * https://material.google.com/components/tooltips.html#tooltips-interaction\n   */\n  _handleBodyInteraction(): void {\n    if (this._closeOnInteraction) {\n      this.hide(0);\n    }\n  }\n}\n\n\n@NgModule({\n  imports: [OverlayModule, CompatibilityModule],\n  exports: [MdTooltip, TooltipComponent, CompatibilityModule],\n  declarations: [MdTooltip, TooltipComponent],\n  entryComponents: [TooltipComponent],\n})\nexport class MdTooltipModule {\n  /** @deprecated */\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MdTooltipModule,\n      providers: []\n    };\n  }\n}\n"]}