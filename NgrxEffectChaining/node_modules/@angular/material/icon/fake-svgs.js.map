{"version":3,"file":"fake-svgs.js","sourceRoot":"","sources":["../../../../src/lib/icon/fake-svgs.ts"],"names":[],"mappings":"OAAO,EACL,QAAQ,EACR,eAAe,EAAC,MAAM,eAAe;AAEvC;;;GAGG;AACH,IAAM,SAAS,GAAG,CAAC;IACjB,IAAM,IAAI,GAAG,IAAI,GAAG,EAAkB,CAAC;IACvC,IAAI,CAAC,GAAG,CAAC,SAAS,EACd,oCAAoC,CAAC,CAAC;IAE1C,IAAI,CAAC,GAAG,CAAC,SAAS,EACd,oCAAoC,CAAC,CAAC;IAE1C,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE,+KAO1B,CAAC,CAAC;IAEH,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE,oLAO1B,CAAC,CAAC;IAEH,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE,wMAOzB,CAAC,CAAC;IAEH,MAAM,CAAC,IAAI,CAAC;AACd,CAAC,CAAC,EAAE,CAAC;AAEL;;;GAGG;AACH,uCAAuC,GAAW;IAChD,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACvB,MAAM,CAAC,IAAI,QAAQ,CAAC,IAAI,eAAe,CAAC;YACtC,MAAM,EAAE,GAAG;YACX,IAAI,EAAE,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC;SACzB,CAAC,CAAC,CAAC;IACN,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,MAAM,CAAC,IAAI,QAAQ,CAAC,IAAI,eAAe,CAAC,EAAC,MAAM,EAAE,GAAG,EAAC,CAAC,CAAC,CAAC;IAC1D,CAAC;AACH,CAAC","sourcesContent":["import {\n  Response,\n  ResponseOptions} from '@angular/http';\n\n/**\n * Fake URLs and associated SVG documents used by tests.\n * @docs-private\n */\nconst FAKE_SVGS = (() => {\n  const svgs = new Map<string, string>();\n  svgs.set('cat.svg',\n      '<svg><path id=\"meow\"></path></svg>');\n\n  svgs.set('dog.svg',\n      '<svg><path id=\"woof\"></path></svg>');\n\n  svgs.set('farm-set-1.svg', `\n      <svg>\n        <defs>\n          <g id=\"pig\"><path id=\"oink\"></path></g>\n          <g id=\"cow\"><path id=\"moo\"></path></g>\n        </defs>\n      </svg>\n  `);\n\n  svgs.set('farm-set-2.svg', `\n      <svg>\n        <defs>\n          <g id=\"cow\"><path id=\"moo moo\"></path></g>\n          <g id=\"sheep\"><path id=\"baa\"></path></g>\n        </defs>\n      </svg>\n  `);\n\n  svgs.set('arrow-set.svg', `\n      <svg>\n        <defs>\n          <svg id=\"left-arrow\"><path id=\"left\"></path></svg>\n          <svg id=\"right-arrow\"><path id=\"right\"></path></svg>\n        </defs>\n      </svg>\n  `);\n\n  return svgs;\n})();\n\n/**\n * Returns an HTTP response for a fake SVG URL.\n * @docs-private\n */\nexport function getFakeSvgHttpResponse(url: string) {\n  if (FAKE_SVGS.has(url)) {\n    return new Response(new ResponseOptions({\n      status: 200,\n      body: FAKE_SVGS.get(url),\n    }));\n  } else {\n    return new Response(new ResponseOptions({status: 404}));\n  }\n}\n"]}