{"version":3,"file":"menu-item.js","sourceRoot":"","sources":["../../../../src/lib/menu/menu-item.ts"],"names":[],"mappings":";;;;;;;;;OAAO,EAAC,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,WAAW,EAAE,QAAQ,EAAC,MAAM,eAAe;AAGjF;;;GAGG;AAaH;IAGE,oBAAoB,SAAmB,EAAU,WAAuB;QAApD,cAAS,GAAT,SAAS,CAAU;QAAU,gBAAW,GAAX,WAAW,CAAY;IAAG,CAAC;IAE5E,0BAAK,GAAL;QACE,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;IAC9E,CAAC;IAMD,sBAAI,gCAAQ;QAJZ,uCAAuC;QACvC,yCAAyC;aAGzC,cAA0B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;aAClD,UAAa,KAAc;YACzB,IAAI,CAAC,SAAS,GAAG,CAAC,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,SAAS,CAAC,GAAG,IAAI,GAAG,IAAI,CAAC;QAC1E,CAAC;;;OAHiD;IAOlD,sBAAI,sCAAc;QAFlB,wDAAwD;aAExD,cAA+B,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;;;OAAA;IAChE,sBAAI,iCAAS;aAAb,cAAkB,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;;;OAAA;IAEtD,oCAAe,GAAf;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;IACxC,CAAC;IAED,mCAAc,GAAd,UAAe,KAAY;QACzB,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClB,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QAC1B,CAAC;IACH,CAAC;IArBD;QAAC,WAAW,CAAC,eAAe,CAAC;QAC5B,KAAK,EAAE;;8CAAA;IAOR;QAAC,WAAW,CAAC,oBAAoB,CAAC;;oDAAA;IA/BpC;QAAC,SAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,iCAAiC;YAC3C,IAAI,EAAE;gBACJ,MAAM,EAAE,UAAU;gBAClB,uBAAuB,EAAE,MAAM;gBAC/B,SAAS,EAAE,wBAAwB;gBACnC,iBAAiB,EAAE,WAAW;aAC/B;YACD,WAAW,EAAE,gBAAgB;YAC7B,QAAQ,EAAE,YAAY;SACvB,CAAC;;kBAAA;IAkCF,iBAAC;AAAD,CAAC,AAjCD,IAiCC","sourcesContent":["import {Component, ElementRef, Input, HostBinding, Renderer} from '@angular/core';\nimport {Focusable} from '../core/a11y/focus-key-manager';\n\n/**\n * This directive is intended to be used inside an md-menu tag.\n * It exists mostly to set the role attribute.\n */\n@Component({\n  moduleId: module.id,\n  selector: '[md-menu-item], [mat-menu-item]',\n  host: {\n    'role': 'menuitem',\n    '[class.mat-menu-item]': 'true',\n    '(click)': '_checkDisabled($event)',\n    '[attr.tabindex]': '_tabindex'\n  },\n  templateUrl: 'menu-item.html',\n  exportAs: 'mdMenuItem'\n})\nexport class MdMenuItem implements Focusable {\n  _disabled: boolean;\n\n  constructor(private _renderer: Renderer, private _elementRef: ElementRef) {}\n\n  focus(): void {\n    this._renderer.invokeElementMethod(this._elementRef.nativeElement, 'focus');\n  }\n\n  // this is necessary to support anchors\n  /** Whether the menu item is disabled. */\n  @HostBinding('attr.disabled')\n  @Input()\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = (value === false || value === undefined) ? null : true;\n  }\n\n  /** Sets the aria-disabled property on the menu item. */\n  @HostBinding('attr.aria-disabled')\n  get isAriaDisabled(): string { return String(!!this.disabled); }\n  get _tabindex() { return this.disabled ? '-1' : '0'; }\n\n  _getHostElement(): HTMLElement {\n    return this._elementRef.nativeElement;\n  }\n\n  _checkDisabled(event: Event) {\n    if (this.disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n}\n\n"]}