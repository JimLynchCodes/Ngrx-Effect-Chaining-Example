{"version":3,"file":"tab-body.js","sourceRoot":"","sources":["../../../../src/lib/tabs/tab-body.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ViewChild,\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  trigger,\n  state,\n  style,\n  animate,\n  transition,\n  AnimationTransitionEvent,\n  ElementRef,\n  Optional,\n  ChangeDetectorRef,\n  AfterViewChecked,\n  AfterContentChecked,\n} from '@angular/core';\nimport {TemplatePortal, PortalHostDirective, Dir, LayoutDirection} from '../core';\nimport 'rxjs/add/operator/map';\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type MdTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type MdTabBodyOriginState = 'left' | 'right';\n\n/**\n * Wrapper for the contents of a tab.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'md-tab-body, mat-tab-body',\n  templateUrl: 'tab-body.html',\n  host: {\n    '[class.mat-tab-body]': 'true',\n  },\n  animations: [\n    trigger('translateTab', [\n      state('left', style({transform: 'translate3d(-100%, 0, 0)'})),\n      state('left-origin-center', style({transform: 'translate3d(0, 0, 0)'})),\n      state('right-origin-center', style({transform: 'translate3d(0, 0, 0)'})),\n      state('center', style({transform: 'translate3d(0, 0, 0)'})),\n      state('right', style({transform: 'translate3d(100%, 0, 0)'})),\n      transition('* => left, * => right, left => center, right => center',\n          animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),\n      transition('void => left-origin-center', [\n        style({transform: 'translate3d(-100%, 0, 0)'}),\n        animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n      ]),\n      transition('void => right-origin-center', [\n        style({transform: 'translate3d(100%, 0, 0)'}),\n        animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\n      ])\n    ])\n  ]\n})\nexport class MdTabBody implements OnInit, AfterViewChecked, AfterContentChecked {\n  /** The portal host inside of this container into which the tab body content will be loaded. */\n  @ViewChild(PortalHostDirective) _portalHost: PortalHostDirective;\n\n  /** Event emitted when the tab begins to animate towards the center as the active tab. */\n  @Output()\n  onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted when the tab completes its animation towards the center. */\n  @Output()\n  onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n  /** The tab body content to display. */\n  @Input('content') _content: TemplatePortal;\n\n  /** The shifted index position of the tab body, where zero represents the active center tab. */\n  _position: MdTabBodyPositionState;\n  @Input('position') set position(position: number) {\n    if (position < 0) {\n      this._position = this._getLayoutDirection() == 'ltr' ? 'left' : 'right';\n    } else if (position > 0) {\n      this._position = this._getLayoutDirection() == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n  }\n\n  /** Whether the element is allowed to be animated. */\n  _canBeAnimated: boolean = false;\n\n  /** The origin position from which this tab should appear when it is centered into view. */\n  _origin: MdTabBodyOriginState;\n\n  /** The origin position from which this tab should appear when it is centered into view. */\n  @Input('origin') set origin(origin: number) {\n    if (origin == null) { return; }\n\n    const dir = this._getLayoutDirection();\n    if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n      this._origin = 'left';\n    } else {\n      this._origin = 'right';\n    }\n  }\n\n  constructor(\n    @Optional() private _dir: Dir,\n    private _elementRef: ElementRef,\n    private _changeDetectorRef: ChangeDetectorRef) { }\n\n  /**\n   * After initialized, check if the content is centered and has an origin. If so, set the\n   * special position states that transition the tab from the left or right before centering.\n   */\n  ngOnInit() {\n    if (this._position == 'center' && this._origin) {\n      this._position = this._origin == 'left' ? 'left-origin-center' : 'right-origin-center';\n    }\n  }\n\n  /**\n   * After the view has been set, check if the tab content is set to the center and attach the\n   * content if it is not already attached.\n   */\n  ngAfterViewChecked() {\n    if (this._isCenterPosition(this._position) && !this._portalHost.hasAttached()) {\n      this._portalHost.attach(this._content);\n    }\n  }\n\n  /**\n   * After the content has been checked, determines whether the element should be allowed to\n   * animate. This has to be limited, because under a specific set of circumstances (see #2151),\n   * the animations can be triggered too early, which either crashes Chrome by putting it into an\n   * infinite loop (with Angular < 2.3.0) or throws an error because the element doesn't have a\n   * computed style (with Angular > 2.3.0). This can alternatively be determined by checking the\n   * transform: canBeAnimated = getComputedStyle(element) !== '', however document.contains should\n   * be faster since it doesn't cause a reflow.\n   *\n   * TODO: This can safely be removed after we stop supporting Angular < 2.4.2. The fix landed via\n   * https://github.com/angular/angular/commit/21030e9a1cf30e8101399d8535ed72d847a23ba6\n   */\n  ngAfterContentChecked() {\n    if (!this._canBeAnimated) {\n      this._canBeAnimated = document.body.contains(this._elementRef.nativeElement);\n\n      if (this._canBeAnimated) {\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n  }\n\n  _onTranslateTabStarted(e: AnimationTransitionEvent) {\n    if (this._isCenterPosition(e.toState)) {\n      this.onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n\n  _onTranslateTabComplete(e: AnimationTransitionEvent) {\n    // If the end state is that the tab is not centered, then detach the content.\n    if (!this._isCenterPosition(e.toState) && !this._isCenterPosition(this._position)) {\n      this._portalHost.detach();\n    }\n\n    // If the transition to the center is complete, emit an event.\n    if (this._isCenterPosition(e.toState) && this._isCenterPosition(this._position)) {\n      this.onCentered.emit();\n    }\n  }\n\n  /** The text direction of the containing app. */\n  _getLayoutDirection(): LayoutDirection {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Whether the provided position state is considered center, regardless of origin. */\n  private _isCenterPosition(position: MdTabBodyPositionState|string): boolean {\n    return position == 'center' ||\n        position == 'left-origin-center' ||\n        position == 'right-origin-center';\n  }\n}\n"]}