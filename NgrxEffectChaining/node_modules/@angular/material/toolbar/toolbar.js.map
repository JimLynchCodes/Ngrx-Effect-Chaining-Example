{"version":3,"file":"toolbar.js","sourceRoot":"","sources":["../../../../src/lib/toolbar/toolbar.ts"],"names":[],"mappings":";;;;;;;;;OAAO,EACL,QAAQ,EAER,SAAS,EACT,uBAAuB,EACvB,KAAK,EACL,iBAAiB,EACjB,SAAS,EACT,UAAU,EACV,QAAQ,EACT,MAAM,eAAe;OACf,EAAC,mBAAmB,EAAC,MAAM,SAAS;AAS3C;IAAA;IAA2B,CAAC;IAN5B;QAAC,SAAS,CAAC;YACT,QAAQ,EAAE,iCAAiC;YAC3C,IAAI,EAAE;gBACJ,yBAAyB,EAAE,MAAM;aAClC;SACF,CAAC;;oBAAA;IACyB,mBAAC;AAAD,CAAC,AAA5B,IAA4B;AAc5B;IAIE,mBAAoB,UAAsB,EAAU,QAAkB;QAAlD,eAAU,GAAV,UAAU,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAU;IAAI,CAAC;IAI3E,sBAAI,4BAAK;QAFT,iEAAiE;aAEjE;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACrB,CAAC;aAED,UAAU,KAAa;YACrB,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC;;;OAJA;IAMO,gCAAY,GAApB,UAAqB,QAAgB;QACnC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAC1C,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACtC,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;IACzB,CAAC;IAEO,oCAAgB,GAAxB,UAAyB,KAAa,EAAE,KAAc;QACpD,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,SAAO,KAAO,EAAE,KAAK,CAAC,CAAC;QACtF,CAAC;IACH,CAAC;IAnBD;QAAC,KAAK,EAAE;;0CAAA;IAnBV;QAAC,SAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,yBAAyB;YACnC,WAAW,EAAE,cAAc;YAC3B,SAAS,EAAE,CAAC,aAAa,CAAC;YAC1B,IAAI,EAAE;gBACJ,qBAAqB,EAAE,MAAM;gBAC7B,MAAM,EAAE,SAAS;aAClB;YACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;YAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;SACtC,CAAC;;iBAAA;IA6BF,gBAAC;AAAD,CAAC,AA5BD,IA4BC;AAQD;IAAA;IAQA,CAAC;IAPC,kBAAkB;IACX,uBAAO,GAAd;QACE,MAAM,CAAC;YACL,QAAQ,EAAE,eAAe;YACzB,SAAS,EAAE,EAAE;SACd,CAAC;IACJ,CAAC;IAZH;QAAC,QAAQ,CAAC;YACR,OAAO,EAAE,CAAC,mBAAmB,CAAC;YAC9B,OAAO,EAAE,CAAC,SAAS,EAAE,YAAY,EAAE,mBAAmB,CAAC;YACvD,YAAY,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;SACxC,CAAC;;uBAAA;IASF,sBAAC;AAAD,CAAC,AARD,IAQC","sourcesContent":["import {\n  NgModule,\n  ModuleWithProviders,\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  ViewEncapsulation,\n  Directive,\n  ElementRef,\n  Renderer\n} from '@angular/core';\nimport {CompatibilityModule} from '../core';\n\n\n@Directive({\n  selector: 'md-toolbar-row, mat-toolbar-row',\n  host: {\n    '[class.mat-toolbar-row]': 'true',\n  },\n})\nexport class MdToolbarRow {}\n\n@Component({\n  moduleId: module.id,\n  selector: 'md-toolbar, mat-toolbar',\n  templateUrl: 'toolbar.html',\n  styleUrls: ['toolbar.css'],\n  host: {\n    '[class.mat-toolbar]': 'true',\n    'role': 'toolbar'\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class MdToolbar {\n\n  private _color: string;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer) { }\n\n  /** The color of the toolbar. Can be primary, accent, or warn. */\n  @Input()\n  get color(): string {\n    return this._color;\n  }\n\n  set color(value: string) {\n    this._updateColor(value);\n  }\n\n  private _updateColor(newColor: string) {\n    this._setElementColor(this._color, false);\n    this._setElementColor(newColor, true);\n    this._color = newColor;\n  }\n\n  private _setElementColor(color: string, isAdd: boolean) {\n    if (color != null && color != '') {\n      this.renderer.setElementClass(this.elementRef.nativeElement, `mat-${color}`, isAdd);\n    }\n  }\n\n}\n\n\n@NgModule({\n  imports: [CompatibilityModule],\n  exports: [MdToolbar, MdToolbarRow, CompatibilityModule],\n  declarations: [MdToolbar, MdToolbarRow],\n})\nexport class MdToolbarModule {\n  /** @deprecated */\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: MdToolbarModule,\n      providers: []\n    };\n  }\n}\n"]}