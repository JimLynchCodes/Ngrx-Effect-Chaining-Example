{"version":3,"file":"query_observable.js","sourceRoot":"","sources":["../../src/database/query_observable.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from 'rxjs/Observable';\nimport { of as observableOf } from  'rxjs/observable/of';\nimport { Operator } from 'rxjs/Operator';\nimport { Observer } from 'rxjs/Observer';\nimport { combineLatest } from 'rxjs/operator/combineLatest';\nimport { merge } from 'rxjs/operator/merge';\nimport { map } from 'rxjs/operator/map';\nimport { auditTime } from 'rxjs/operator/auditTime';\nimport {\n  Query,\n  ScalarQuery,\n  OrderByOptions,\n  OrderBySelection,\n  LimitToOptions,\n  LimitToSelection,\n  Primitive\n} from '../interfaces';\nimport { hasKey, isNil } from '../utils';\n\nexport function observeQuery(query: Query, audit: boolean = true): Observable<ScalarQuery> {\n  if (isNil(query)) {\n    return observableOf(null);\n  }\n\n  return Observable.create((observer: Observer<ScalarQuery>) => {\n\n    let combined = combineLatest.call(\n      getOrderObservables(query),\n      getStartAtObservable(query),\n      getEndAtObservable(query),\n      getEqualToObservable(query),\n      getLimitToObservables(query)\n    );\n    if (audit) {\n      combined = auditTime.call(combined, 0);\n    }\n    combined\n      .subscribe(([orderBy, startAt, endAt, equalTo, limitTo]\n        : [OrderBySelection, Primitive, Primitive, Primitive, LimitToSelection]) => {\n\n        let serializedOrder: any = {};\n        if (!isNil(orderBy) && !isNil(orderBy.value)) {\n          switch (orderBy.key) {\n            case OrderByOptions.Key:\n              serializedOrder = { orderByKey: <boolean>orderBy.value };\n              break;\n            case OrderByOptions.Priority:\n              serializedOrder = { orderByPriority: <boolean>orderBy.value };\n              break;\n            case OrderByOptions.Value:\n              serializedOrder = { orderByValue: <boolean>orderBy.value };\n              break;\n            case OrderByOptions.Child:\n              serializedOrder = { orderByChild: <string>orderBy.value };\n              break;\n          }\n        }\n\n        if (!isNil(limitTo) && !isNil(limitTo.value)) {\n          switch (limitTo.key) {\n            case LimitToOptions.First:\n              serializedOrder.limitToFirst = limitTo.value;\n              break;\n            case LimitToOptions.Last: {\n              serializedOrder.limitToLast = limitTo.value;\n              break;\n            }\n          }\n        }\n\n        if (startAt !== undefined) {\n          serializedOrder.startAt = startAt;\n        }\n\n        if (endAt !== undefined) {\n          serializedOrder.endAt = endAt;\n        }\n\n        if (equalTo !== undefined) {\n          serializedOrder.equalTo = equalTo;\n        }\n\n        observer.next(serializedOrder);\n      });\n  });\n}\n\nexport function getOrderObservables(query: Query): Observable<OrderBySelection> {\n  var observables = ['orderByChild', 'orderByKey', 'orderByValue', 'orderByPriority']\n    .map((key: string, option: OrderByOptions) => {\n      return ({ key, option })\n    })\n    .filter(({key, option}: { key: string, option: OrderByOptions }) => {\n      return !isNil(query[key]);\n    })\n    .map(({key, option}) => mapToOrderBySelection(<any>query[key], option));\n\n  if (observables.length === 1) {\n    return observables[0];\n  } else if (observables.length > 1) {\n    return merge.apply(observables[0], observables.slice(1));\n  } else {\n    return new Observable<OrderBySelection>(subscriber => {\n      subscriber.next(null);\n    });\n  }\n}\n\nexport function getLimitToObservables(query: Query): Observable<LimitToSelection> {\n  var observables = ['limitToFirst', 'limitToLast']\n    .map((key: string, option: LimitToOptions) => ({ key, option }))\n    .filter(({key, option}: { key: string, option: LimitToOptions }) => !isNil(query[key]))\n    .map(({key, option}) => mapToLimitToSelection(<any>query[key], option));\n\n  if (observables.length === 1) {\n    return observables[0];\n  } else if (observables.length > 1) {\n    const mergedObs = merge.apply(observables[0], observables.slice(1));\n    return mergedObs;\n  } else {\n    return new Observable<LimitToSelection>(subscriber => {\n      subscriber.next(null);\n    });\n  }\n}\n\nexport function getStartAtObservable(query: Query): Observable<Primitive> {\n  if (query.startAt instanceof Observable) {\n    return query.startAt;\n  } else if (hasKey(query, 'startAt')) {\n    return new Observable<Primitive>(subscriber => {\n      subscriber.next(query.startAt);\n    });\n  } else {\n    return new Observable<Primitive>(subscriber => {\n      subscriber.next(undefined);\n    });\n  }\n}\n\nexport function getEndAtObservable(query: Query): Observable<Primitive> {\n  if (query.endAt instanceof Observable) {\n    return query.endAt;\n  } else if (hasKey(query, 'endAt')) {\n    return new Observable<Primitive>(subscriber => {\n      subscriber.next(query.endAt);\n    });\n  } else {\n    return new Observable<Primitive>(subscriber => {\n      subscriber.next(undefined);\n    });\n  }\n}\n\nexport function getEqualToObservable(query: Query): Observable<Primitive> {\n  if (query.equalTo instanceof Observable) {\n    return query.equalTo;\n  } else if (hasKey(query, 'equalTo')) {\n    return new Observable<Primitive>(subscriber => {\n      subscriber.next(query.equalTo);\n    });\n  } else {\n    return new Observable<Primitive>(subscriber => {\n      subscriber.next(undefined);\n    });\n  }\n}\n\n\nfunction mapToOrderBySelection(value: Observable<boolean | string> | boolean | string, key: OrderByOptions): Observable<OrderBySelection> {\n  if (value instanceof Observable) {\n    return map\n      .call(value, (value: boolean): OrderBySelection => {\n        return ({ value, key });\n      });\n  } else {\n    return new Observable<OrderBySelection>(subscriber => {\n      subscriber.next({ key, value });\n    });\n  }\n\n}\n\nfunction mapToLimitToSelection(value: Observable<number> | number, key: LimitToOptions): Observable<LimitToSelection> {\n  if (value instanceof Observable) {\n    return map\n      .call(value, (value: number): LimitToSelection => ({ value, key }));\n  } else {\n    return new Observable<LimitToSelection>(subscriber => {\n      subscriber.next({ key, value });\n    });\n  }\n}\n\nfunction hasObservableProperties(query: Query): boolean {\n  if (query.orderByKey instanceof Observable) return true;\n  return false;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}