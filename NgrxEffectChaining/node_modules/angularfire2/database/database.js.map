{"version":3,"file":"database.js","sourceRoot":"","sources":["../../src/database/database.ts"],"names":[],"mappings":";;;;;;;;;;;;AACA,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AACnD,OAAO,EAAE,WAAW,EAAE,cAAc,EAAE,MAAM,WAAW,CAAC;AAExD,OAAO,EAAE,mBAAmB,EAAE,MAAM,SAAS,CAAC;AAE9C,OAAO,KAAK,KAAK,MAAM,UAAU,CAAC;AAClC,OAAO,EAGL,qBAAqB,EACtB,MAAM,SAAS,CAAC;AAGjB,IAAa,mBAAmB;IAC9B,6BAA4C,QAA0B,EACvC,KAAS;QADI,aAAQ,GAAR,QAAQ,CAAkB;QACvC,UAAK,GAAL,KAAK,CAAI;IAAG,CAAC;IAC5C,kCAAI,GAAJ,UAAM,QAA6C,EAAE,IAA6B;QAAlF,iBAKC;QAJC,MAAM,CAAC,KAAK,CAAC,wBAAwB,CAAC,QAAQ,EAAE;YAC9C,KAAK,EAAE,cAAM,OAAA,mBAAmB,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,EAAU,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,EAAvG,CAAuG;YACpH,KAAK,EAAE,cAAM,OAAA,mBAAmB,CAA8B,QAAQ,CAAC,EAA1D,CAA0D;SACxE,CAAC,CAAC;IACL,CAAC;IACD,oCAAM,GAAN,UAAO,QAA8C,EAAE,IAA+B;QAAtF,iBAKC;QAJC,MAAM,CAAC,KAAK,CAAC,wBAAwB,CAAC,QAAQ,EAAE;YAC9C,KAAK,EAAE,cAAM,OAAA,qBAAqB,CAAC,KAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,SAAS,CAAC,KAAI,CAAC,QAAQ,EAAU,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,EAAzG,CAAyG;YACtH,KAAK,EAAE,cAAM,OAAA,qBAAqB,CAAC,QAAQ,CAAC,EAA/B,CAA+B;SAC7C,CAAC,CAAC;IACL,CAAC;IACH,0BAAC;AAAD,CAAC,AAfD,IAeC;AAfY,mBAAmB;IAD/B,UAAU,EAAE;IAEE,WAAA,MAAM,CAAC,cAAc,CAAC,CAAA;IAChC,WAAA,MAAM,CAAC,WAAW,CAAC,CAAA;;GAFX,mBAAmB,CAe/B;SAfY,mBAAmB;AAiBhC,mBAAoB,IAAsB,EAAE,GAAU;IACpD,EAAE,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;QAGlC,GAAG,GAAG,IAAI,CAAC,WAAW,GAAG,GAAG,GAAG,KAAK,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;IAC9D,CAAC;IACD,MAAM,CAAC,GAAG,CAAC;AACb,CAAC","sourcesContent":["import * as firebase from 'firebase';\nimport { Inject, Injectable } from '@angular/core';\nimport { FirebaseApp, FirebaseConfig } from '../tokens';\nimport { FirebaseAppConfig } from '../angularfire2';\nimport { FirebaseListFactory } from './index';\nimport { FirebaseListFactoryOpts, FirebaseObjectFactoryOpts } from '../interfaces';\nimport * as utils from '../utils';\nimport {\n  FirebaseListObservable,\n  FirebaseObjectObservable,\n  FirebaseObjectFactory\n} from './index';\n\n@Injectable()\nexport class AngularFireDatabase {\n  constructor(@Inject(FirebaseConfig) private fbConfig:FirebaseAppConfig,\n    @Inject(FirebaseApp) private fbApp:any) {}\n  list (urlOrRef:string | firebase.database.Reference, opts?:FirebaseListFactoryOpts):FirebaseListObservable<any[]> {\n    return utils.checkForUrlOrFirebaseRef(urlOrRef, {\n      isUrl: () => FirebaseListFactory(this.fbApp.database().refFromURL(getAbsUrl(this.fbConfig, <string>urlOrRef)), opts),\n      isRef: () => FirebaseListFactory(<firebase.database.Reference>urlOrRef)\n    });\n  }\n  object(urlOrRef: string | firebase.database.Reference, opts?:FirebaseObjectFactoryOpts):FirebaseObjectObservable<any> {\n    return utils.checkForUrlOrFirebaseRef(urlOrRef, {\n      isUrl: () => FirebaseObjectFactory(this.fbApp.database().refFromURL(getAbsUrl(this.fbConfig, <string>urlOrRef)), opts),\n      isRef: () => FirebaseObjectFactory(urlOrRef)\n    });\n  }\n}\n\nfunction getAbsUrl (root:FirebaseAppConfig, url:string) {\n  if (!(/^[a-z]+:\\/\\/.*/.test(url))) {\n    // Provided url is relative.\n    // Strip any leading slash\n    url = root.databaseURL + '/' + utils.stripLeadingSlash(url);\n  }\n  return url;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}