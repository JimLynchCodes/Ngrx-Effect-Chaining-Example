{"version":3,"file":"reducer.js","sourceRoot":"","sources":["../../src/reducer.ts"],"names":[],"mappings":";;;;;OAAO,EAAE,eAAe,EAAE,MAAM,sBAAsB;AAQtD;IAA6B,2BAAmC;IAG9D,iBAAoB,WAAuB,EAAE,cAAkC;QAC7E,kBAAM,cAAc,CAAC,CAAC;QADJ,gBAAW,GAAX,WAAW,CAAY;IAE3C,CAAC;IAED,gCAAc,GAAd,UAAe,OAA2B;QACxC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACrB,CAAC;IAED,sBAAI,GAAJ,UAAK,OAA2B;QAC9B,gBAAK,CAAC,IAAI,YAAC,OAAO,CAAC,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC;IACvD,CAAC;IAbM,eAAO,GAAG,6BAA6B,CAAC;IAcjD,cAAC;AAAD,CAAC,AAfD,CAA6B,eAAe,GAe3C","sourcesContent":["import { BehaviorSubject } from 'rxjs/BehaviorSubject';\n\nimport { Dispatcher, Action } from './dispatcher';\n\nexport interface ActionReducer<T> {\n  (state: T, action: Action): T;\n}\n\nexport class Reducer extends BehaviorSubject<ActionReducer<any>> {\n  static REPLACE = '@ngrx/store/replace-reducer';\n\n  constructor(private _dispatcher: Dispatcher, initialReducer: ActionReducer<any>) {\n    super(initialReducer);\n  }\n\n  replaceReducer(reducer: ActionReducer<any>) {\n    this.next(reducer);\n  }\n\n  next(reducer: ActionReducer<any>) {\n    super.next(reducer);\n    this._dispatcher.dispatch({ type: Reducer.REPLACE });\n  }\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}