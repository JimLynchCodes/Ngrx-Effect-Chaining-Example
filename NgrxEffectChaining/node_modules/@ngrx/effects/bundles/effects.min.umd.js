!function(global,factory){"object"==typeof exports&&"undefined"!=typeof module?factory(exports,require("rxjs/observable/merge"),require("rxjs/operator/ignoreElements"),require("@angular/core"),require("@ngrx/store"),require("rxjs/Observable"),require("rxjs/operator/filter"),require("rxjs/Subscription")):"function"==typeof define&&define.amd?define(["exports","rxjs/observable/merge","rxjs/operator/ignoreElements","@angular/core","@ngrx/store","rxjs/Observable","rxjs/operator/filter","rxjs/Subscription"],factory):factory((global.ngrx=global.ngrx||{},global.ngrx.effects=global.ngrx.effects||{}),global.Rx.Observable,global.Rx.Observable.prototype,global.ng.core,global.ngrx.store,global.Rx,global.Rx.Observable.prototype,global.Rx)}(this,function(exports,rxjs_observable_merge,rxjs_operator_ignoreElements,_angular_core,_ngrx_store,rxjs_Observable,rxjs_operator_filter,rxjs_Subscription){"use strict";function Effect(_a){var dispatch=(void 0===_a?{dispatch:!0}:_a).dispatch;return function(target,propertyName){Reflect.hasOwnMetadata(METADATA_KEY,target)||Reflect.defineMetadata(METADATA_KEY,[],target);var effects=Reflect.getOwnMetadata(METADATA_KEY,target),metadata={propertyName:propertyName,dispatch:dispatch};Reflect.defineMetadata(METADATA_KEY,effects.concat([metadata]),target)}}function getEffectsMetadata(instance){var target=Object.getPrototypeOf(instance);return Reflect.hasOwnMetadata(METADATA_KEY,target)?Reflect.getOwnMetadata(METADATA_KEY,target):[]}function mergeEffects(instance){var observables=getEffectsMetadata(instance).map(function(_a){var propertyName=_a.propertyName,dispatch=_a.dispatch,observable="function"==typeof instance[propertyName]?instance[propertyName]():instance[propertyName];return dispatch===!1?rxjs_operator_ignoreElements.ignoreElements.call(observable):observable});return rxjs_observable_merge.merge.apply(void 0,observables)}function runAfterBootstrapEffects(injector,subscription){return function(){var effectInstances=injector.get(afterBootstrapEffects,!1);effectInstances&&subscription.addEffects(effectInstances)}}function toPayload(action){return action.payload}var METADATA_KEY="@ngrx/effects",__extends=void 0||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},Actions=function(_super){function Actions(actionsSubject){_super.call(this),this.source=actionsSubject}return __extends(Actions,_super),Actions.prototype.lift=function(operator){var observable=new Actions(this);return observable.operator=operator,observable},Actions.prototype.ofType=function(){for(var keys=[],_i=0;_i<arguments.length;_i++)keys[_i-0]=arguments[_i];return rxjs_operator_filter.filter.call(this,function(_a){var type=_a.type,len=keys.length;if(1===len)return type===keys[0];for(var i=0;len>i;i++)if(keys[i]===type)return!0;return!1})},Actions.decorators=[{type:_angular_core.Injectable}],Actions.ctorParameters=[{type:rxjs_Observable.Observable,decorators:[{type:_angular_core.Inject,args:[_ngrx_store.Dispatcher]}]}],Actions}(rxjs_Observable.Observable),__extends$1=void 0||function(d,b){function __(){this.constructor=d}for(var p in b)b.hasOwnProperty(p)&&(d[p]=b[p]);d.prototype=null===b?Object.create(b):(__.prototype=b.prototype,new __)},effects=new _angular_core.OpaqueToken("ngrx/effects: Effects"),EffectsSubscription=function(_super){function EffectsSubscription(store,parent,effectInstances){_super.call(this),this.store=store,this.parent=parent,Boolean(parent)&&parent.add(this),Boolean(effectInstances)&&this.addEffects(effectInstances)}return __extends$1(EffectsSubscription,_super),EffectsSubscription.prototype.addEffects=function(effectInstances){var sources=effectInstances.map(mergeEffects),merged=rxjs_observable_merge.merge.apply(void 0,sources);this.add(merged.subscribe(this.store))},EffectsSubscription.prototype.ngOnDestroy=function(){this.closed||this.unsubscribe()},EffectsSubscription.decorators=[{type:_angular_core.Injectable}],EffectsSubscription.ctorParameters=[{type:void 0,decorators:[{type:_angular_core.Inject,args:[_ngrx_store.Store]}]},{type:EffectsSubscription,decorators:[{type:_angular_core.Optional},{type:_angular_core.SkipSelf}]},{type:Array,decorators:[{type:_angular_core.Optional},{type:_angular_core.Inject,args:[effects]}]}],EffectsSubscription}(rxjs_Subscription.Subscription),afterBootstrapEffects=new _angular_core.OpaqueToken("ngrx:effects: Bootstrap Effects"),EffectsModule=function(){function EffectsModule(){}return EffectsModule.run=function(type){return{ngModule:EffectsModule,providers:[EffectsSubscription,type,{provide:effects,useExisting:type,multi:!0}]}},EffectsModule.runAfterBootstrap=function(type){return{ngModule:EffectsModule,providers:[type,{provide:afterBootstrapEffects,useExisting:type,multi:!0}]}},EffectsModule.decorators=[{type:_angular_core.NgModule,args:[{providers:[Actions,EffectsSubscription,{provide:_angular_core.APP_BOOTSTRAP_LISTENER,multi:!0,deps:[_angular_core.Injector,EffectsSubscription],useFactory:runAfterBootstrapEffects}]}]}],EffectsModule.ctorParameters=[],EffectsModule}();exports.Effect=Effect,exports.mergeEffects=mergeEffects,exports.Actions=Actions,exports.EffectsModule=EffectsModule,exports.EffectsSubscription=EffectsSubscription,exports.toPayload=toPayload,Object.defineProperty(exports,"__esModule",{value:!0})});