{"version":3,"file":"effects-subscription.js","sourceRoot":"","sources":["../../src/effects-subscription.ts"],"names":[],"mappings":";;;;;OAAO,EAAE,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAa,MAAM,eAAe;OACvF,EAAE,KAAK,EAAE,MAAM,aAAa;OAE5B,EAAE,YAAY,EAAE,MAAM,mBAAmB;OACzC,EAAE,KAAK,EAAE,MAAM,uBAAuB;OACtC,EAAE,YAAY,EAAE,MAAM,WAAW;AAIxC,OAAO,IAAM,OAAO,GAAG,IAAI,WAAW,CAAC,uBAAuB,CAAC,CAAC;AAGhE;IAAyC,uCAAY;IACnD,6BACW,KAAwB,EACxB,MAA2B,EAClC,eAAuB;QAEzB,iBAAO,CAAC;QAJC,UAAK,GAAL,KAAK,CAAmB;QACxB,WAAM,GAAN,MAAM,CAAqB;QAKpC,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YACpB,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACnB,CAAC;QAED,EAAE,CAAC,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;QACnC,CAAC;IACH,CAAC;IAED,wCAAU,GAAV,UAAW,eAAsB;QAC/B,IAAM,OAAO,GAAG,eAAe,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAClD,IAAM,MAAM,GAAG,KAAK,eAAI,OAAO,CAAC,CAAC;QAEjC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IACzC,CAAC;IAED,yCAAW,GAAX;QACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;YACjB,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,CAAC;IACH,CAAC;IACI,8BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,kCAAc,GAA6D;QAClF,EAAC,IAAI,EAAE,SAAS,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,KAAK,EAAG,EAAE,EAAG,EAAC;QACpE,EAAC,IAAI,EAAE,mBAAmB,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAG,EAAC;QACnF,EAAC,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,OAAO,EAAG,EAAE,EAAG,EAAC;KACrF,CAAC;IACF,0BAAC;AAAD,CAAC,AAtCD,CAAyC,YAAY,GAsCpD","sourcesContent":["import { OpaqueToken, Inject, SkipSelf, Optional, Injectable, OnDestroy } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observer } from 'rxjs/Observer';\nimport { Subscription } from 'rxjs/Subscription';\nimport { merge } from 'rxjs/observable/merge';\nimport { mergeEffects } from './effects';\nimport { Actions } from './actions';\n\n\nexport const effects = new OpaqueToken('ngrx/effects: Effects');\n\n\nexport class EffectsSubscription extends Subscription implements OnDestroy {\n  constructor(\n     private store: Observer<Actions>,\n      public parent: EffectsSubscription,\n      effectInstances?: any[]\n  ) {\n    super();\n\n    if (Boolean(parent)) {\n      parent.add(this);\n    }\n\n    if (Boolean(effectInstances)) {\n      this.addEffects(effectInstances);\n    }\n  }\n\n  addEffects(effectInstances: any[]) {\n    const sources = effectInstances.map(mergeEffects);\n    const merged = merge(...sources);\n\n    this.add(merged.subscribe(this.store));\n  }\n\n  ngOnDestroy() {\n    if (!this.closed) {\n      this.unsubscribe();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: ({type: any, decorators?: DecoratorInvocation[]}|null)[] = [\n{type: undefined, decorators: [{ type: Inject, args: [Store, ] }, ]},\n{type: EffectsSubscription, decorators: [{ type: Optional }, { type: SkipSelf }, ]},\n{type: Array, decorators: [{ type: Optional }, { type: Inject, args: [effects, ] }, ]},\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}