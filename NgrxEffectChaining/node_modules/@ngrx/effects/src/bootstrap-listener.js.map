{"version":3,"file":"bootstrap-listener.js","sourceRoot":"","sources":["../../src/bootstrap-listener.ts"],"names":[],"mappings":"OAAO,EAAY,WAAW,EAAE,MAAM,eAAe;AAIrD,OAAO,IAAM,qBAAqB,GAAG,IAAI,WAAW,CAAC,iCAAiC,CAAC,CAAC;AAExF,yCAAyC,QAAkB,EAAE,YAAiC;IAC5F,MAAM,CAAC;QACL,IAAM,eAAe,GAAG,QAAQ,CAAC,GAAG,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;QAEnE,EAAE,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC;YACpB,YAAY,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { Injector, OpaqueToken } from '@angular/core';\nimport { EffectsSubscription } from './effects-subscription';\n\n\nexport const afterBootstrapEffects = new OpaqueToken('ngrx:effects: Bootstrap Effects');\n\nexport function runAfterBootstrapEffects(injector: Injector, subscription: EffectsSubscription) {\n  return () => {\n    const effectInstances = injector.get(afterBootstrapEffects, false);\n\n    if (effectInstances) {\n      subscription.addEffects(effectInstances);\n    }\n  };\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}